<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://learn.lovelace.academy//feed.xml" rel="self" type="application/atom+xml" /><link href="https://learn.lovelace.academy//" rel="alternate" type="text/html" /><updated>2021-10-17T14:22:26+00:00</updated><id>https://learn.lovelace.academy//feed.xml</id><title type="html">Lovelace Academy</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">NFT Minting Guide</title><link href="https://learn.lovelace.academy//tokens/nft-minting-guide/" rel="alternate" type="text/html" title="NFT Minting Guide" /><published>2021-08-24T00:00:00+00:00</published><updated>2021-09-08T00:00:00+00:00</updated><id>https://learn.lovelace.academy//tokens/nft-minting-guide</id><content type="html" xml:base="https://learn.lovelace.academy//tokens/nft-minting-guide/">&lt;p&gt;Non Fungible Tokens (NFTs) provide uniqueness guarantees across the entire blockchain.&lt;/p&gt;

&lt;h2 id=&quot;define-multisig-policy&quot;&gt;Define Multisig Policy&lt;/h2&gt;
&lt;p&gt;The property of uniqueness can be defined in a Multisig policy by time locking constraint.&lt;/p&gt;

&lt;h2 id=&quot;minting-transaction&quot;&gt;Minting Transaction&lt;/h2&gt;
&lt;p&gt;Coming soon (please refer to &lt;a href=&quot;https://developers.cardano.org/docs/native-tokens/minting-nfts/&quot;&gt;Cardano Developers Minting NFTs documentation&lt;/a&gt; for now)&lt;/p&gt;

&lt;h2 id=&quot;token-builders&quot;&gt;Token Builders&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://tokhun.io/account/assets/mint-nft&quot;&gt;Tokhun&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nft-maker.io/&quot;&gt;NFT Maker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cardano-native-token.com/&quot;&gt;Cardano Token and NFT Builder&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://easycnft.art/en&quot;&gt;EasyCNFT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nft-machine.com/&quot;&gt;NFT Machine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="Tokens" /><summary type="html">Non Fungible Tokens (NFTs) provide uniqueness guarantees across the entire blockchain.</summary></entry><entry><title type="html">Fungible Token Minting Guide</title><link href="https://learn.lovelace.academy//tokens/fungible-token-minting-guide/" rel="alternate" type="text/html" title="Fungible Token Minting Guide" /><published>2021-08-23T00:00:00+00:00</published><updated>2021-09-08T00:00:00+00:00</updated><id>https://learn.lovelace.academy//tokens/fungible-token-minting-guide</id><content type="html" xml:base="https://learn.lovelace.academy//tokens/fungible-token-minting-guide/">&lt;p&gt;We will break it down how to mint fungible tokens in four basic steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create Policy Key&lt;/li&gt;
  &lt;li&gt;Define Multisig Policy&lt;/li&gt;
  &lt;li&gt;Create Wallet Keys and Addresses&lt;/li&gt;
  &lt;li&gt;Submit Minting Transaction&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;create-policy-key&quot;&gt;Create Policy Key&lt;/h2&gt;
&lt;p&gt;A policy key can be generated using the same approach as generating a payment address key as described in our page &lt;a href=&quot;https://learn.lovelace.academy/getting-started/keys-and-addresses/&quot;&gt;Getting Started - Wallet Basics: Keys and Addresses&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cardano-cli address key-gen &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--verification-key-file&lt;/span&gt; ft-policy.vkey &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--signing-key-file&lt;/span&gt; ft-policy.skey
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Note the hash of the key by running&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;policyhash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;cardano-cli address key-hash &lt;span class=&quot;nt&quot;&gt;--payment-verification-key-file&lt;/span&gt; ft-policy.vkey&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;define-multisig-policy&quot;&gt;Define Multisig Policy&lt;/h2&gt;
&lt;p&gt;Create a ft-policy.script file with the right script using&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;ft-policy.script 
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;{&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ft-policy.script 
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;  &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;keyHash&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$policyhash&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ft-policy.script
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;  &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sig&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ft-policy.script
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;}&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ft-policy.script
&lt;span class=&quot;nv&quot;&gt;policyid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;cardano-cli transaction policyid &lt;span class=&quot;nt&quot;&gt;--script-file&lt;/span&gt; ft-policy.script&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;details&gt;
    &lt;summary&gt;ft-policy.script&lt;/summary&gt;
&lt;pre&gt;
{
  &quot;keyHash&quot;: &quot;6d788af8d970a78d2ef3ec43e6515749a607d9c09d8c7441e8d694a9&quot;,
  &quot;type&quot;: &quot;sig&quot;
}
&lt;/pre&gt;
&lt;/details&gt;

&lt;p&gt;This policy is a simple policy that requires a single signature from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ft-policy.skey&lt;/code&gt; private signing key.&lt;/p&gt;

&lt;h2 id=&quot;create-source-and-destination-wallet-keys-and-addresses&quot;&gt;Create Source and Destination Wallet Keys and Addresses&lt;/h2&gt;
&lt;p&gt;We will then create another set of keys for two wallets. One source wallet to get testnet tADA from the faucet to mint the fungible tokens, and one destination wallet to receive the minted tokens. Although in theory you can use the same policy key to generate an address to receive tADA and mint the custom tokens, it is recommended to use a different set of keys based on their purpose.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cardano-cli address key-gen &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--verification-key-file&lt;/span&gt; source.vkey &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--signing-key-file&lt;/span&gt; source.skey

cardano-cli address build &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--payment-verification-key-file&lt;/span&gt; source.vkey &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--out-file&lt;/span&gt; source.addr &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--testnet-magic&lt;/span&gt; 1097911063

cardano-cli address key-gen &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--verification-key-file&lt;/span&gt; dest.vkey &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--signing-key-file&lt;/span&gt; dest.skey

cardano-cli address build &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--payment-verification-key-file&lt;/span&gt; dest.vkey &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--out-file&lt;/span&gt; dest.addr &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--testnet-magic&lt;/span&gt; 1097911063

&lt;span class=&quot;nv&quot;&gt;sourceaddr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&amp;lt; source.addr&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;destaddr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&amp;lt; dest.addr&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;load-ada-from-testnet-faucet&quot;&gt;Load ADA from Testnet Faucet&lt;/h3&gt;
&lt;p&gt;Use the &lt;a href=&quot;https://testnets.cardano.org/en/testnets/cardano/tools/faucet/&quot;&gt;testnet faucet&lt;/a&gt; to send ADA to the generated source wallet address.&lt;/p&gt;

&lt;p&gt;You can then wait a short while and query that the tADA has reached your address by running:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cardano-cli query utxo &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--address&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&amp;lt; source.addr&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--testnet-magic&lt;/span&gt; 1097911063   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;minting-transaction&quot;&gt;Minting Transaction&lt;/h2&gt;
&lt;p&gt;By querying the source address that received the 1000 tADA from the faucet, load the relevant UTxO details (hash, index and value) into shell variables.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;UTXO0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;cardano-cli query utxo &lt;span class=&quot;nt&quot;&gt;--address&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$sourceaddr&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--testnet-magic&lt;/span&gt; 1097911063 | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 3p&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;UTXO0H&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$UTXO0&lt;/span&gt; | egrep &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[a-z0-9]+'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 1p&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;UTXO0I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$UTXO0&lt;/span&gt; | egrep &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[a-z0-9]+'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 2p&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;UTXO0V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$UTXO0&lt;/span&gt; | egrep &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[a-z0-9]+'&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 3p&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;get-the-latest-protocol-parameters&quot;&gt;Get the Latest Protocol Parameters&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cardano-cli query protocol-parameters &lt;span class=&quot;nt&quot;&gt;--testnet-magic&lt;/span&gt; 1097911063 &lt;span class=&quot;nt&quot;&gt;--out-file&lt;/span&gt; protocol.json 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;build-draft-tx-to-calculate-fee&quot;&gt;Build draft Tx to Calculate Fee&lt;/h3&gt;
&lt;p&gt;In this example we are minting two custom tokens using the same &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;policyid&lt;/code&gt;, 1000 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;learn&lt;/code&gt; tokens and 1 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;la25&lt;/code&gt; token.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;learnassetname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;learn
&lt;span class=&quot;nv&quot;&gt;learnqty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1000
&lt;span class=&quot;nv&quot;&gt;discount25assetname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;la25
&lt;span class=&quot;nv&quot;&gt;discount25qty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;span class=&quot;nv&quot;&gt;txoutchange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0

cardano-cli transaction build-raw &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--tx-in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$UTXO0H&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#$UTXO0I \&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--tx-out&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$destaddr&lt;/span&gt;+&lt;span class=&quot;nv&quot;&gt;$UTXO0V&lt;/span&gt;+&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$learnqty&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$policyid&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$learnassetname&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; +&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$discount25qty&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$policyid&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$discount25assetname&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--tx-out&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$sourceaddr&lt;/span&gt;+&lt;span class=&quot;nv&quot;&gt;$txoutchange&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--mint&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$learnqty&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$policyid&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$learnassetname&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; + &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$discount25qty&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$policyid&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$discount25assetname&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--minting-script-file&lt;/span&gt; ft-policy.script &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--fee&lt;/span&gt; 0 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--out-file&lt;/span&gt; fee_draft.txraw

&lt;span class=&quot;nv&quot;&gt;fee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;cardano-cli transaction calculate-min-fee &lt;span class=&quot;nt&quot;&gt;--tx-body-file&lt;/span&gt; fee_draft.txraw &lt;span class=&quot;nt&quot;&gt;--tx-in-count&lt;/span&gt; 1 &lt;span class=&quot;nt&quot;&gt;--tx-out-count&lt;/span&gt; 2 &lt;span class=&quot;nt&quot;&gt;--witness-count&lt;/span&gt; 2 &lt;span class=&quot;nt&quot;&gt;--testnet-magic&lt;/span&gt; 1097911063 &lt;span class=&quot;nt&quot;&gt;--protocol-params-file&lt;/span&gt; protocol.json | egrep &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[0-9]+'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The trickiest part is building the Tx with the correct &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--tx-out&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--mint&lt;/code&gt; parameters. The format for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--tx-out&lt;/code&gt; is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{address}+{ada_amount}+{custom_token_quantity} {policyid}.{asset_name}&lt;/code&gt; with additional custom tokens concatenated afterwards. The format for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--mint&lt;/code&gt; is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--tx-out&lt;/code&gt; without the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{address}+{ada_amount}&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;build-raw-minting-tx&quot;&gt;Build Raw Minting Tx&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;mindestinationlovelace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1800000
&lt;span class=&quot;nv&quot;&gt;txoutchange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;expr&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$UTXO0V&lt;/span&gt; - &lt;span class=&quot;nv&quot;&gt;$fee&lt;/span&gt; - &lt;span class=&quot;nv&quot;&gt;$mindestinationlovelace&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;

cardano-cli transaction build-raw &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--tx-in&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$UTXO0H&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#$UTXO0I \&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--tx-out&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$destaddr&lt;/span&gt;+&lt;span class=&quot;nv&quot;&gt;$mindestinationlovelace&lt;/span&gt;+&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$learnqty&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$policyid&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$learnassetname&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; +&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$discount25qty&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$policyid&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$discount25assetname&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--tx-out&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$sourceaddr&lt;/span&gt;+&lt;span class=&quot;nv&quot;&gt;$txoutchange&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--mint&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$learnqty&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$policyid&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$learnassetname&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; + &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$discount25qty&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$policyid&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$discount25assetname&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--minting-script-file&lt;/span&gt; ft-policy.script &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--fee&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$fee&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--out-file&lt;/span&gt; mint.txraw
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;sign-raw-minting-tx&quot;&gt;Sign Raw Minting Tx&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cardano-cli transaction sign  &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--signing-key-file&lt;/span&gt; ft-policy.skey  &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--signing-key-file&lt;/span&gt; source.skey  &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--testnet-magic&lt;/span&gt; 1097911063 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--tx-body-file&lt;/span&gt; mint.txraw  &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;--out-file&lt;/span&gt; mint.txsigned
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;submit-signed-tx&quot;&gt;Submit Signed Tx&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cardano-cli transaction submit --tx-file mint.txsigned --testnet-magic 1097911063
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;token-builders&quot;&gt;Token Builders&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://tokhun.io/account/assets/mint-nft&quot;&gt;Tokhun&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nft-maker.io/&quot;&gt;NFT Maker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cardano-native-token.com/&quot;&gt;Cardano Token and NFT Builder&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://easycnft.art/en&quot;&gt;EasyCNFT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nft-machine.com/&quot;&gt;NFT Machine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;supplementary-material&quot;&gt;Supplementary Material&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.cardano.org/native-tokens/learn&quot;&gt;Cardano Docs: Learn about native tokens&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.cardano.org/docs/native-tokens/minting&quot;&gt;Cardano Developers Minting Native Assets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mint-your-first-nft&quot;&gt;Mint your first NFT&lt;/h2&gt;
&lt;p&gt;Learn how to mint your first NFT at &lt;a href=&quot;https://learn.lovelace.academy/tokens/minting-policies/&quot;&gt;NFT Minting Guide ➡️&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="Tokens" /><summary type="html">We will break it down how to mint fungible tokens in four basic steps:</summary></entry><entry><title type="html">Minting Policies</title><link href="https://learn.lovelace.academy//tokens/minting-policies/" rel="alternate" type="text/html" title="Minting Policies" /><published>2021-08-22T00:00:00+00:00</published><updated>2021-09-08T00:00:00+00:00</updated><id>https://learn.lovelace.academy//tokens/minting-policies</id><content type="html" xml:base="https://learn.lovelace.academy//tokens/minting-policies/">&lt;p&gt;Minting is the action in which units of a custom token can be &lt;strong&gt;created&lt;/strong&gt; or &lt;strong&gt;destroyed&lt;/strong&gt; based on validation rules defined in a monetary &lt;strong&gt;policy&lt;/strong&gt;. A blockchain with native asset support such as Cardano defines minting policies as a base-layer primitive, permitting anyone holding its principal token (i.e. ADA) to mint any number of custom tokens grouped under a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;policyID&lt;/code&gt; policy identifier and a specified &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;asset name&lt;/code&gt;. This greatly reduces the learning curve for users wanting to issue custom tokens on Cardano as no smart contract experience is required.&lt;/p&gt;

&lt;h2 id=&quot;fungible-vs-non-fungible&quot;&gt;Fungible vs Non-Fungible&lt;/h2&gt;

&lt;p&gt;The combination of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;policyID&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;asset name&lt;/code&gt;, metadata from the minting Tx, and details from the official &lt;a href=&quot;https://github.com/cardano-foundation/cardano-token-registry&quot;&gt;Token Registry&lt;/a&gt; provide all the information for a custom token regardless of whether it is Fungible or Non-Fungible. The main difference is that Non Fungible Tokens (NFTs) provide a guarantee of uniqueness which can be defined using Multisig or Plutus Script policies to ensure that &lt;strong&gt;only one&lt;/strong&gt; token exists under the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;policyID&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;asset name&lt;/code&gt; combination.&lt;/p&gt;

&lt;h2 id=&quot;multisig-policies&quot;&gt;Multisig Policies&lt;/h2&gt;

&lt;h3 id=&quot;introduction-to-multisig&quot;&gt;Introduction to Multisig&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/input-output-hk/cardano-node/blob/c6b574229f76627a058a7e559599d2fc3f40575d/doc/reference/simple-scripts.md&quot;&gt;Multisignature (multisig)&lt;/a&gt; validation scripts allow us to define basic rules before an action is permitted. These rules cover the scenarios where signatures from N or M keys are required, and optionally before (or after) a specified time has elapsed. Multisig scripts are simply JSON files such as the following example &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;two-owner-time-locked.script&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;keyHash&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;e09d36c79dec9bd1b3d9e152247701cd0bb860b5ebfd1de8abb6735a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sig&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;keyHash&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a687dcc24e00dd3caafbeb5e68f97ca8ef269cb6fe971345eb951756&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sig&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;slot&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;41217687&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;before&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;all&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The multisig script file above can be interpreted as requiring signatures from two keys, their hashes defined under the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scripts&lt;/code&gt; array and a time-locked boundary before slot 41217687. You can then derive the corresponding multisig payment address using:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cardano-cli shelley address build-script
  &lt;span class=&quot;nt&quot;&gt;--script-file&lt;/span&gt; two-owner-time-locked.script &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--testnet-magic&lt;/span&gt; 1097911063 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--out-file&lt;/span&gt; two-owner-time-locked.addr &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That address can now be used as a payment address to receive ADA or custom tokens, but to &lt;strong&gt;spend&lt;/strong&gt; these values in the UTxOs &lt;strong&gt;must pass the validation rules defined in the multisig script&lt;/strong&gt;, i.e. require signatures from both keys and only before  slot 41217687.&lt;/p&gt;

&lt;h3 id=&quot;generating-a-multisig-minting-policy&quot;&gt;Generating a Multisig Minting Policy&lt;/h3&gt;
&lt;p&gt;These same validation scripts can also be used to define a minting policy for a native asset. From the script file you can generate the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;policyId&lt;/code&gt; using&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cardano-cli transaction policyid &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--script-file&lt;/span&gt; two-owner-time-locked.script
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;plutus-script-policies&quot;&gt;Plutus Script Policies&lt;/h2&gt;
&lt;p&gt;Multisig policies allow us to define basic validation rules based on a set of keys and a time-locked boundary, but with Plutus Script based policies you can define a much more comprehensive set of minting rules.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;More content coming soon…&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;mint-your-own-token&quot;&gt;Mint your own Token&lt;/h2&gt;
&lt;p&gt;Learn how to mint your first fungible token at &lt;a href=&quot;https://learn.lovelace.academy/tokens/fungible-token-minting-guide/&quot;&gt;Fungible Token Minting Guide ➡️&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="Tokens" /><summary type="html">Minting is the action in which units of a custom token can be created or destroyed based on validation rules defined in a monetary policy. A blockchain with native asset support such as Cardano defines minting policies as a base-layer primitive, permitting anyone holding its principal token (i.e. ADA) to mint any number of custom tokens grouped under a policyID policy identifier and a specified asset name. This greatly reduces the learning curve for users wanting to issue custom tokens on Cardano as no smart contract experience is required.</summary></entry><entry><title type="html">Introduction to Tokens</title><link href="https://learn.lovelace.academy//tokens/introduction-to-tokens/" rel="alternate" type="text/html" title="Introduction to Tokens" /><published>2021-08-21T00:00:00+00:00</published><updated>2021-09-08T00:00:00+00:00</updated><id>https://learn.lovelace.academy//tokens/introduction-to-tokens</id><content type="html" xml:base="https://learn.lovelace.academy//tokens/introduction-to-tokens/">&lt;p&gt;Tokens are on-chain representations of assets or facts that can be minted (created/destroyed), stored and transferred within a blockchain. In the context of Cardano the terms &lt;em&gt;token&lt;/em&gt; and &lt;em&gt;asset&lt;/em&gt; are &lt;em&gt;generally&lt;/em&gt; interchangeable, although an asset can be used to denote the class/category of a token before any are minted.&lt;/p&gt;

&lt;h2 id=&quot;multi-asset-blockchains&quot;&gt;Multi-asset Blockchains&lt;/h2&gt;
&lt;p&gt;Unlike single-asset blockchains (e.g. Bitcoin and Litecoin) which only support a single principal asset (i.e. BTC and LTC), a multi-asset blockchain supports the minting, storing and transferring of custom tokens in addition to its principal asset. Examples of multi-asset blockchains are Ethereum and Cardano, which support an infinite amount of custom tokens in addition to their principal asset (i.e. ETH and ADA). This permits anyone to define custom tokens representing:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Fungible Assets&lt;/strong&gt;: Supports multiple units of value grouped under a specific class (e.g. currency, loyalty points, game points), each unit indistinguishable from another under the same class&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Non-Fungible Assets (NFTs)&lt;/strong&gt;: A single unit representing a distinct asset or fact that is unique across the entire blockchain (e.g. art collectables, identity, real estate)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;native-assets&quot;&gt;Native Assets&lt;/h2&gt;
&lt;p&gt;A multi-asset blockchain has native asset support (e.g. Cardano, Ergo and Algorand) if all of its custom tokens follow the same base-layer accounting rules as its principal asset. This allows users to mint or transact in custom tokens without paying additional fees incurred by executing token-specific smart contracts. The following advantages arise from native asset support:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Cheap, fast and reliable transactions for all tokens&lt;/li&gt;
  &lt;li&gt;Universal interoperability of all tokens&lt;/li&gt;
  &lt;li&gt;Simple minting process for custom tokens&lt;/li&gt;
  &lt;li&gt;Ability to bundle minting/transfer of multiple tokens in a single transaction (e.g. Token Bundles)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cardanos-native-assets&quot;&gt;Cardano’s Native Assets&lt;/h2&gt;
&lt;p&gt;Although Cardano’s implementation of Native Assets resolves many of the current issues plaguing layer-2 token implementations, there are a few key points to note:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A Tx output with custom tokens must also include a minimum amount of the principal token ADA (currently approx. 1.5 ADA)&lt;/li&gt;
  &lt;li&gt;The minimum amount is calculated using a &lt;a href=&quot;https://cardano-ledger.readthedocs.io/en/latest/explanations/min-utxo.html#min-ada-value-calculation&quot;&gt;formula based on protocol parameters and the payload of the transaction output&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This design decision prevents an attack vector where malicious actors can easily flood the Cardano network with an endless stream of custom token Tx outputs, resulting in large transaction payloads propagating across the network and an unmanageable set of UTxOs.&lt;/p&gt;

&lt;h2 id=&quot;supplementary-material&quot;&gt;Supplementary Material&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.cardano.org/native-tokens/learn&quot;&gt;Cardano Docs: Native Tokens&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.cardano.org/native-tokens/learn&quot;&gt;Cardano Developers Portal: Discover Native Tokens&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;create-minting-policies&quot;&gt;Create Minting Policies&lt;/h2&gt;
&lt;p&gt;Continue on to &lt;a href=&quot;https://learn.lovelace.academy/tokens/minting-policies/&quot;&gt;Minting Policies ➡️&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="Tokens" /><summary type="html">Tokens are on-chain representations of assets or facts that can be minted (created/destroyed), stored and transferred within a blockchain. In the context of Cardano the terms token and asset are generally interchangeable, although an asset can be used to denote the class/category of a token before any are minted.</summary></entry><entry><title type="html">EUTxO</title><link href="https://learn.lovelace.academy//fundamentals/eutxo/" rel="alternate" type="text/html" title="EUTxO" /><published>2021-07-08T00:00:00+00:00</published><updated>2021-07-08T00:00:00+00:00</updated><id>https://learn.lovelace.academy//fundamentals/eutxo</id><content type="html" xml:base="https://learn.lovelace.academy//fundamentals/eutxo/"></content><author><name></name></author><category term="Fundamentals" /><summary type="html"></summary></entry><entry><title type="html">Local Development</title><link href="https://learn.lovelace.academy//fundamentals/local-development/" rel="alternate" type="text/html" title="Local Development" /><published>2021-07-08T00:00:00+00:00</published><updated>2021-07-08T00:00:00+00:00</updated><id>https://learn.lovelace.academy//fundamentals/local-development</id><content type="html" xml:base="https://learn.lovelace.academy//fundamentals/local-development/"></content><author><name></name></author><category term="Fundamentals" /><summary type="html"></summary></entry><entry><title type="html">Oracles</title><link href="https://learn.lovelace.academy//the-plutus-platform/oracles/" rel="alternate" type="text/html" title="Oracles" /><published>2021-07-08T00:00:00+00:00</published><updated>2021-07-08T00:00:00+00:00</updated><id>https://learn.lovelace.academy//the-plutus-platform/oracles</id><content type="html" xml:base="https://learn.lovelace.academy//the-plutus-platform/oracles/"></content><author><name></name></author><category term="The Plutus Platform" /><summary type="html"></summary></entry><entry><title type="html">Parameterised contracts</title><link href="https://learn.lovelace.academy//the-plutus-platform/parameterised-contracts/" rel="alternate" type="text/html" title="Parameterised contracts" /><published>2021-07-08T00:00:00+00:00</published><updated>2021-07-08T00:00:00+00:00</updated><id>https://learn.lovelace.academy//the-plutus-platform/parameterised-contracts</id><content type="html" xml:base="https://learn.lovelace.academy//the-plutus-platform/parameterised-contracts/"></content><author><name></name></author><category term="The Plutus Platform" /><summary type="html"></summary></entry><entry><title type="html">Publishing a contract</title><link href="https://learn.lovelace.academy//the-plutus-platform/publishing-a-contract/" rel="alternate" type="text/html" title="Publishing a contract" /><published>2021-07-08T00:00:00+00:00</published><updated>2021-07-08T00:00:00+00:00</updated><id>https://learn.lovelace.academy//the-plutus-platform/publishing-a-contract</id><content type="html" xml:base="https://learn.lovelace.academy//the-plutus-platform/publishing-a-contract/"></content><author><name></name></author><category term="The Plutus Platform" /><summary type="html"></summary></entry><entry><title type="html">Publishing</title><link href="https://learn.lovelace.academy//fundamentals/publishing/" rel="alternate" type="text/html" title="Publishing" /><published>2021-07-08T00:00:00+00:00</published><updated>2021-07-08T00:00:00+00:00</updated><id>https://learn.lovelace.academy//fundamentals/publishing</id><content type="html" xml:base="https://learn.lovelace.academy//fundamentals/publishing/"></content><author><name></name></author><category term="Fundamentals" /><summary type="html"></summary></entry></feed>